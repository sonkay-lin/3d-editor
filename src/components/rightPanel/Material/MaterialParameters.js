import * as THREE from 'three';

export const materialType = {
  // 基础材质
  MeshBasicMaterial: [
    'type',
    'uuid',
    'name',
    'color',
    'reflectivity',
    'vertexColors',
    'map',
    'specularMap',
    'alphaMap',
    'envMap',
    'lightMap',
    'aoMap',
    'side',
    'blending',
    'opacity',
    'transparent',
    'alphaTest',
    'depthTest',
    'depthWrite',
    'wireframe',
    'userData'
  ],
  // 深度材质
  MeshDepthMaterial: [
    'type',
    'uuid',
    'name',
    'vertexColors',
    'depthPacking',
    'map',
    'alphaMap',
    'displacementMap',
    'displacementScale',
    'side',
    'blending',
    'opacity',
    'transparent',
    'alphaTest',
    'depthTest',
    'depthWrite',
    'wireframe',
    'userData'
  ],
  // 法线材质
  MeshNormalMaterial: [
    'type',
    'uuid',
    'name',
    'vertexColors',
    'bumpMap',
    'normalMap',
    'displacementMap',
    'displacementScale',
    'side',
    'flatShading',
    'blending',
    'opacity',
    'transparent',
    'alphaTest',
    'depthTest',
    'depthWrite',
    'wireframe',
    'userData'
  ],
  // Lambert材质
  MeshLambertMaterial: [
    'type',
    'uuid',
    'name',
    'color',
    'emissive',
    'emissiveIntensity',
    'reflectivity',
    'map',
    'specularMap',
    'emissiveMap',
    'alphaMap',
    'bumpMap',
    'normalMap',
    'displacementMap',
    'envMap',
    'lightMap',
    'aoMap',
    'side',
    'flatShading',
    'blending',
    'opacity',
    'transparent',
    'alphaTest',
    'depthTest',
    'depthWrite',
    'wireframe',
    'userData'
  ],
  // Matcap材质
  MeshMatcapMaterial: [
    'type',
    'uuid',
    'name',
    'color',
    'vertexColors',
    'map',
    'matcap',
    'alphaMap',
    'bumpMap',
    'normalMap',
    'displacementMap',
    'side',
    'flatShading',
    'blending',
    'opacity',
    'transparent',
    'alphaTest',
    'depthTest',
    'depthWrite',
    'userData'
  ],
  // Phong材质
  MeshPhongMaterial: [
    'type',
    'uuid',
    'name',
    'color',
    'specular',
    'shininess',
    'emissive',
    'reflectivity',
    'vertexColors',
    'map',
    'specularMap',
    'emissiveMap',
    'alphaMap',
    'bumpMap',
    'normalMap',
    'displacementMap',
    'envMap',
    'lightMap',
    'aoMap',
    'side',
    'flatShading',
    'blending',
    'opacity',
    'transparent',
    'alphaTest',
    'depthTest',
    'depthWrite',
    'wireframe',
    'userData'
  ],
  // 卡通材质
  MeshToonMaterial: [
    'type',
    'uuid',
    'name',
    'color',
    'emissive',
    'vertexColors',
    'map',
    'emissiveMap',
    'alphaMap',
    'bumpMap',
    'normalMap',
    'displacementMap',
    'lightMap',
    'aoMap',
    'gradientMap',
    'side',
    'flatShading',
    'blending',
    'opacity',
    'transparent',
    'forceSinglePass',
    'alphaTest',
    'depthTest',
    'depthWrite',
    'wireframe',
    'userData'
  ],
  // 标准材质
  MeshStandardMaterial: [
    'type',
    'uuid',
    'name',
    'color',
    'emissive',
    'roughness',
    'metalness',
    'vertexColors',
    'map',
    'emissiveMap',
    'alphaMap',
    'bumpMap',
    'normalMap',
    'normalScale',
    'displacementMap',
    'displacementScale',
    'roughnessMap',
    'metalnessMap',
    'lightMap',
    'aoMap',
    'aoMapIntensity',
    'side',
    'flatShading',
    'blending',
    'opacity',
    'transparent',
    'alphaTest',
    'depthTest',
    'depthWrite',
    'wireframe',
    'userData'
  ],
  // 物理材质
  MeshPhysicalMaterial: [
    'type',
    'uuid',
    'name',
    'color',
    'emissive',
    'reflectivity',
    'roughness',
    'metalness',
    'clearcoat',
    'clearcoatRoughness',
    'iridescence',
    'iridescenceIOR',
    'iridescenceThicknessRange',
    'sheen',
    'sheenRoughness',
    'transmission',
    'attenuationDistance',
    'attenuationColor',
    'thickness',
    'vertexColors',

    'map',
    'emissiveMap',
    'alphaMap',
    'bumpMap',
    'normalMap',
    'clearcoatMap',
    'clearcoatNormalMap',
    'clearcoatRoughnessMap',
    'displacementMap',
    'roughnessMap',
    'metalnessMap',
    'iridescenceMap',
    'iridescenceThicknessMap',
    'sheenColorMap',
    'sheenRoughnessMap',
    'envMap',
    'lightMap',
    'aoMap',
    'transmissionMap',
    'thicknessMap',

    'side',
    'flatShading',
    'blending',
    'opacity',
    'transparent',
    'forceSinglePass',
    'alphaTest',
    'depthTest',
    'depthWrite',
    'wireframe',
    'userData'
  ],
  // 原始着色器材质
  RawShaderMaterial: [
    'type',
    'uuid',
    'name',
    'program',
    'vertexColors',
    'side',
    'blending',
    'opacity',
    'transparent',
    'forceSinglePass',
    'alphaTest',
    'depthTest',
    'depthWrite',
    'wireframe',
    'userData'
  ],
  // 着色器材质
  ShaderMaterial: [
    'type',
    'uuid',
    'name',
    'program',
    'vertexColors',
    'side',
    'blending',
    'opacity',
    'transparent',
    'forceSinglePass',
    'alphaTest',
    'depthTest',
    'depthWrite',
    'wireframe',
    'userData'
  ],
  // 阴影材质
  ShadowMaterial: [
    'type',
    'uuid',
    'name',
    'color',
    'vertexColors',
    'side',
    'blending',
    'opacity',
    'transparent',
    'forceSinglePass',
    'alphaTest',
    'depthTest',
    'depthWrite',
    'userData'
  ],
  // 精灵材质
  SpriteMaterial: [
    'type',
    'uuid',
    'name',
    'color',
    'vertexColors',
    'map',
    'alphaMap',
    'side',
    'sizeAttenuation',
    'blending',
    'opacity',
    'transparent',
    'forceSinglePass',
    'alphaTest',
    'depthTest',
    'depthWrite',
    'userData'
  ],
  // 基础线条材质
  LineBasicMaterial: [
    'type',
    'uuid',
    'name',
    'color',
    'vertexColors',
    // 'linewidth',
    'map',
    'side',
    'blending',
    'opacity',
    'transparent',
    'forceSinglePass',
    'alphaTest',
    'depthTest',
    'depthWrite',
    'userData'
  ],
  // 虚线材质
  LineDashedMaterial: [
    'type',
    'uuid',
    'name',
    'color',
    'vertexColors',
    // 'linewidth',
    'map',
    'side',
    'blending',
    'opacity',
    'transparent',
    'forceSinglePass',
    'alphaTest',
    'depthTest',
    'depthWrite',
    'userData'
  ],
  // 点材质
  PointsMaterial: [
    'type',
    'uuid',
    'name',
    'color',
    'vertexColors',
    'map',
    'alphaMap',
    'side',
    'size',
    'sizeAttenuation',
    'blending',
    'opacity',
    'transparent',
    'forceSinglePass',
    'alphaTest',
    'depthTest',
    'depthWrite',
    'userData'
  ]
};

export const materialClasses = {
  LineBasicMaterial: THREE.LineBasicMaterial,
  LineDashedMaterial: THREE.LineDashedMaterial,
  MeshBasicMaterial: THREE.MeshBasicMaterial,
  MeshDepthMaterial: THREE.MeshDepthMaterial,
  MeshNormalMaterial: THREE.MeshNormalMaterial,
  MeshLambertMaterial: THREE.MeshLambertMaterial,
  MeshMatcapMaterial: THREE.MeshMatcapMaterial,
  MeshPhongMaterial: THREE.MeshPhongMaterial,
  MeshToonMaterial: THREE.MeshToonMaterial,
  MeshStandardMaterial: THREE.MeshStandardMaterial,
  MeshPhysicalMaterial: THREE.MeshPhysicalMaterial,
  RawShaderMaterial: THREE.RawShaderMaterial,
  ShaderMaterial: THREE.ShaderMaterial,
  ShadowMaterial: THREE.ShadowMaterial,
  SpriteMaterial: THREE.SpriteMaterial,
  PointsMaterial: THREE.PointsMaterial
};

export const meshMaterialOptions = {
  MeshBasicMaterial: '基础材质-MeshBasicMaterial',
  MeshDepthMaterial: '深度材质-MeshDepthMaterial',
  MeshNormalMaterial: '法线材质-MeshNormalMaterial',
  MeshLambertMaterial: 'Lambert材质-MeshLambertMaterial',
  MeshMatcapMaterial: 'Matcap材质-MeshMatcapMaterial',
  MeshPhongMaterial: 'Phong材质-MeshPhongMaterial',
  MeshToonMaterial: '卡通材质-MeshToonMaterial',
  MeshStandardMaterial: '标准材质-MeshStandardMaterial',
  MeshPhysicalMaterial: '物理材质-MeshPhysicalMaterial',
  RawShaderMaterial: '原始着色器材质-RawShaderMaterial',
  ShaderMaterial: '着色器材质-ShaderMaterial',
  ShadowMaterial: '阴影材质-ShadowMaterial'
};

export const lineMaterialOptions = {
  LineBasicMaterial: '基础线条材质-LineBasicMaterial',
  LineDashedMaterial: '虚线材质-LineDashedMaterial',
  RawShaderMaterial: '原始着色器材质-RawShaderMaterial',
  ShaderMaterial: '着色器材质-ShaderMaterial'
};

export const spriteMaterialOptions = {
  SpriteMaterial: '精灵材质-SpriteMaterial',
  RawShaderMaterial: '原始着色器材质-RawShaderMaterial',
  ShaderMaterial: '着色器材质-ShaderMaterial'
};

export const pointsMaterialOptions = {
  PointsMaterial: '点材质-PointsMaterial',
  RawShaderMaterial: '原始着色器材质-RawShaderMaterial',
  ShaderMaterial: '着色器材质-ShaderMaterial'
};

export const vertexShaderVariables = [
  'uniform mat4 projectionMatrix;',
  'uniform mat4 modelViewMatrix;\n',
  'attribute vec3 position;\n\n'
].join('\n');
